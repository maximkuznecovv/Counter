{"version":3,"sources":["Counter_1/Button.tsx","Counter_1/Score.tsx","Counter_1/Counter_1.tsx","Counter_localstorage/Counter_localstorage.tsx","Counter_localstorage_useEffect/useEffect.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","className","onClick","addInc","disabled","score","addReset","Score","Counter_1","useState","setScore","Counter_localstorage","value","setValue","localStorage","setItem","JSON","stringify","valueAsString","getItem","newValue","parse","clear","removeItem","sessionStorage","toString","UseEffect","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAQO,SAASA,EAAOC,GACnB,OAAO,sBAAKC,UAAU,UAAf,UACH,wBAAQA,UAAW,QAASC,QAASF,EAAMG,OAAQC,SAA0B,IAAhBJ,EAAMK,MAAnE,eACA,wBAAQJ,UAAW,QAASC,QAASF,EAAMM,SAAUF,SAA2B,IAAhBJ,EAAMK,MAAtE,sBCJD,SAASE,EAAMP,GAClB,OAAO,qBAAKC,UAA2B,IAAhBD,EAAMK,MAAc,WAAa,QAAjD,SAA2DL,EAAMK,QCJrE,SAASG,IAAa,IAAD,EAEAC,mBAAiB,GAFjB,mBAEnBJ,EAFmB,KAEZK,EAFY,KAYxB,OACI,qBAAKT,UAAU,YAAf,SACI,sBAAKA,UAAU,UAAf,UACI,cAACM,EAAD,CAAOF,MAAOA,IACd,cAACN,EAAD,CAAQM,MAAOA,EACPF,OAbpB,WACIO,EAASL,EAAQ,IAaDC,SAVpB,WACII,EAAS,WCXV,SAASC,IAAwB,IAAD,EAEXF,mBAAiB,GAFN,mBAE9BG,EAF8B,KAEvBC,EAFuB,KAmCnC,OACI,gCACI,6BAAKD,IACL,wBAAQV,QAlCG,WACfW,EAASD,EAAQ,IAiCb,iBACA,wBAAQV,QA/Be,WAC3BY,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUL,IACpDE,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUL,EAAQ,KA6B5D,6BACA,wBAAQV,QAtBmB,WAC/B,IAAIgB,EAAgBJ,aAAaK,QAAQ,gBACzC,GAAID,EAAe,CACf,IAAIE,EAAWJ,KAAKK,MAAMH,GAC1BL,EAASO,KAkBT,iCACA,wBAAQlB,QAfiB,WAC7BY,aAAaQ,QACbT,EAAS,IAaL,+BACA,wBAAQX,QAX0B,WACtCY,aAAaS,WAAW,qBAUpB,wCAEA,8BACI,wBAAQrB,QAhCa,WAE7BsB,eAAeT,QAAQ,QAASH,EAAMa,aA8B9B,oCC7CT,SAASC,IAAa,IAAD,EAEAjB,mBAAiB,GAFjB,mBAEnBG,EAFmB,KAEZC,EAFY,KAoBxB,OAZAc,qBAAU,WACN,IAAIT,EAAgBJ,aAAaK,QAAQ,YACzC,GAAID,EAAe,CACf,IAAIE,EAAWJ,KAAKK,MAAMH,GAC1BL,EAASO,MAEf,IAEFO,qBAAU,WACNb,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,MACjD,CAACA,IAGA,gCACI,6BAAKA,IACL,wBAAQV,QAnBG,WACfW,EAASD,EAAQ,IAkBb,oBCDGgB,MAlBf,WACI,OACI,sBAAK3B,UAAW,MAAhB,UACI,6CACA,cAACO,EAAD,IACA,uBAGA,uBACA,wDACA,cAACG,EAAD,IACA,uBACA,kEACA,cAACe,EAAD,QCLGG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fb95db27.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype  ButtonPropsType = {\r\n    score: number\r\n    addInc:() => void\r\n    addReset:() => void\r\n}\r\n\r\nexport function Button(props: ButtonPropsType) {\r\n    return <div className='buttons'>\r\n        <button className={'butC1'} onClick={props.addInc} disabled={props.score === 5}>+</button>\r\n        <button className={'butC1'} onClick={props.addReset} disabled={(props.score === 0)}>reset</button>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\n\r\ntype  ScorePropsType = {\r\n    score: number\r\n\r\n}\r\n\r\nexport function Score(props: ScorePropsType) {\r\n    return <div className={props.score === 5 ? 'scoreRed' : 'score'}>{props.score}</div>\r\n}\r\n","import React, {useState} from \"react\";\nimport {Button} from \"./Button\";\nimport {Score} from \"./Score\";\n\nexport function Counter_1() {\n\n    let [score, setScore] = useState<number>(0)\n\n    function inc() {\n        setScore(score + 1)\n    }\n\n    function reset() {\n        setScore(0)\n    }\n\n    return (\n        <div className=\"Counter_1\">\n            <div className='wrapper'>\n                <Score score={score}/>\n                <Button score={score}\n                        addInc={inc}\n                        addReset={reset}/>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\n\nexport function Counter_localstorage() {\n\n    let [value, setValue] = useState<number>(0)\n\n    const incHandler = () => {\n        setValue(value + 1)\n    }\n\n    const setLocalStorageHandler = () => {\n        localStorage.setItem(\"counterValue\", JSON.stringify(value))\n        localStorage.setItem(\"counterValue + 1\", JSON.stringify(value + 1))\n    }\n\n    const setSessionStorageHandler = () => {\n        // sessionStorage.setItem(\"Value\", JSON.stringify(value))\n        sessionStorage.setItem(\"Value\", value.toString())\n    }\n\n    const getFromLocalStorageHandler = () => {\n        let valueAsString = localStorage.getItem(\"counterValue\")\n        if (valueAsString) {\n            let newValue = JSON.parse(valueAsString)\n            setValue(newValue)\n        }\n    }\n\n    const clearLocalStorageHandler = () => {\n        localStorage.clear()\n        setValue(0)\n    }\n\n    const removeItemFromLocalStorageHandler = () => {\n        localStorage.removeItem(\"counterValue + 1\")\n    }\n\n    return (\n        <div>\n            <h1>{value}</h1>\n            <button onClick={incHandler}>inc</button>\n            <button onClick={setLocalStorageHandler}>setLocalStorage</button>\n            <button onClick={getFromLocalStorageHandler}>getFromLocalStorage</button>\n            <button onClick={clearLocalStorageHandler}>clearLocalStorage</button>\n            <button onClick={removeItemFromLocalStorageHandler}>removeItemFromLocalStorage</button>\n\n            <div>\n                <button onClick={setSessionStorageHandler}>setSessionStorage</button>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\n\nexport function UseEffect() {\n\n    let [value, setValue] = useState<number>(0)\n\n    const incHandler = () => {\n        setValue(value + 1)\n    }\n\n    useEffect(()=>{\n        let valueAsString = localStorage.getItem(\"useValue\")\n        if (valueAsString) {\n            let newValue = JSON.parse(valueAsString)\n            setValue(newValue)\n        }\n    },[])\n\n    useEffect(()=>{\n        localStorage.setItem(\"useValue\", JSON.stringify(value))\n    }, [value])\n\n    return (\n        <div>\n            <h1>{value}</h1>\n            <button onClick={incHandler}>inc</button>\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport {Counter_1} from \"../Counter_1/Counter_1\";\nimport {Counter_localstorage} from \"../Counter_localstorage/Counter_localstorage\";\nimport {UseEffect} from \"../Counter_localstorage_useEffect/useEffect\";\n\nfunction App() {\n    return (\n        <div className={\"App\"}>\n            <div>Counter 1:</div>\n            <Counter_1/>\n            <hr/>\n            {/*<div>Counter 2:</div>*/}\n            {/*<Counter_2/>*/}\n            <hr/>\n            <div>Counter localstorage:</div>\n            <Counter_localstorage/>\n            <hr/>\n            <div>Counter localstorage useEffect:</div>\n            <UseEffect/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}