{"version":3,"sources":["Counter_2.1_localstorage/Counter2_1.module.css","Counter_2.0_localstorage/Counter2.module.css","Count Else/Counter_Vlad/CounterSettings.module.css","Count Else/Counter_Vlad/Counter.module.css","Count Else/Counter_someone/components/Counter/Display/Display.module.css","Count Else/Counter_someone/components/Settings/Settings.module.css","Count Else/Counter_someone/components/Buttons/Button.module.css","Count Else/Counter_Vlad/App.module.css","Count Else/Counter_Vlad/Button.module.css","Counter_localstorage/Counter_localstorage.tsx","Counter_localstorage_useEffect/useEffect.tsx","Counter_1/Button.tsx","Counter_1/Score.tsx","Counter_1/Counter_1.tsx","Counter_2.0_localstorage/Button.tsx","Counter_2.0_localstorage/Score.tsx","Counter_2.0_localstorage/SetValue.tsx","Counter_2.0_localstorage/SetB.tsx","Counter_2.0_localstorage/Counter_2.tsx","Count Else/Counter_Vlad/Button.tsx","Count Else/Counter_Vlad/Counter.tsx","Count Else/Counter_Vlad/CounterSettings.tsx","Count Else/Counter_Vlad/Counter_Vlad.tsx","Count Else/Counter_someone/components/Buttons/Button.tsx","Count Else/Counter_someone/components/Settings/Input/Input.tsx","Count Else/Counter_someone/components/Settings/Settings.tsx","Count Else/Counter_someone/components/Counter/Display/Display.tsx","Count Else/Counter_someone/components/Counter/Counter.tsx","Count Else/Counter_someone/App.tsx","Counter_2.1_localstorage/Button.tsx","Counter_2.1_localstorage/Score.tsx","Counter_2.1_localstorage/SetValue.tsx","Counter_2.1_localstorage/SetB.tsx","Counter_2.1_localstorage/Counter_2_1.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter_localstorage","useState","value","setValue","onClick","localStorage","setItem","JSON","stringify","valueAsString","getItem","newValue","parse","clear","removeItem","sessionStorage","toString","UseEffect","useEffect","Button","props","className","addInc","disabled","score","addReset","Score","Counter_1","setScore","Button2","error1","error","error2","s","buttons","butC1","inc","max","reset","start","Score2","errorStyle","colorCount","SetValue","setError","errorInput","input","settingScore","onChange","e","setMax","Number","currentTarget","type","setStart","SetB","disabledButton","setBut","setStartMax","Counter_2","wrapper","btn","onClickHandler","title","Counter","settingsCounter","CounterWrapper","count","slowResetCount","setCountIncValue","resetCountValue","CounterTable","maxValueCount","valueCount","counter","CounterBtn","minValueCount","CounterSettings","setNewSettings","setNewValue","valueSettingWrapper","num","valueAsNumber","CounterSettingBtn","disabledBtn","Counter_Vlad","setCount","setSettingsCounter","useScore","App","id","interval","setInterval","clearInterval","styleBtnValue","maxValue","startValue","settings","style","disable","button","callback","name","Input","Settings","localMaxValue","setLocalMaxValue","localStartValue","setLocalStartValue","setStorageValues","inputClass","set_input","event","changeMaxValue","parseInt","onSettings","changeStartValue","Display","errorMessage","display","error_message","classNameValue","App_someone","setMaxValue","setStartValue","setSettings","onOff","mxValue","Counter_2_1","isOnOff","setIsOnOff","settingStart","settingMax","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c78cc4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Counter2_1_app__1GnuD\",\"Counter_2\":\"Counter2_1_Counter_2__3M5aK\",\"wrapper\":\"Counter2_1_wrapper__3bzMA\",\"settingScore\":\"Counter2_1_settingScore__3zmmS\",\"mxValue\":\"Counter2_1_mxValue__1-av9\",\"score\":\"Counter2_1_score__Tpsu7\",\"error\":\"Counter2_1_error__2iDs4\",\"buttons\":\"Counter2_1_buttons__123Ca\",\"setBut\":\"Counter2_1_setBut__xH0_V\",\"butC1\":\"Counter2_1_butC1__1NyEs\",\"max\":\"Counter2_1_max__2QkDy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Counter2_app__38mcK\",\"Counter_2\":\"Counter2_Counter_2__11-HJ\",\"wrapper\":\"Counter2_wrapper__3qfO6\",\"settingScore\":\"Counter2_settingScore__s64iY\",\"score\":\"Counter2_score__2x6hx\",\"error\":\"Counter2_error__j4wfO\",\"buttons\":\"Counter2_buttons__2WBe-\",\"setBut\":\"Counter2_setBut__1CLnL\",\"butC1\":\"Counter2_butC1__8eYNF\",\"max\":\"Counter2_max__23lVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CounterWrapper\":\"CounterSettings_CounterWrapper__3kZeK\",\"counter\":\"CounterSettings_counter__Zl5ZO\",\"error\":\"CounterSettings_error__2-UKE\",\"valueSettingWrapper\":\"CounterSettings_valueSettingWrapper__36qwH\",\"input\":\"CounterSettings_input__15KOw\",\"errorInput\":\"CounterSettings_errorInput__1IYC-\",\"buttons\":\"CounterSettings_buttons__1W2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CounterWrapper\":\"Counter_CounterWrapper__2e9tE\",\"counter\":\"Counter_counter__2O2FM\",\"error\":\"Counter_error__z_5Ih\",\"buttons\":\"Counter_buttons__2Prs9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__1HEgu\",\"error_message\":\"Display_error_message__2m9Bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"set_input\":\"Settings_set_input__3kTGn\",\"error\":\"Settings_error__GH0ne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3TvPY\",\"disable\":\"Button_disable__kSQTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2-rA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2wAwY\"};","import React, {useState} from \"react\";\n\nexport function Counter_localstorage() {\n\n    let [value, setValue] = useState<number>(0)\n\n    const incHandler = () => {\n        setValue(value + 1)\n    }\n\n    const setLocalStorageHandler = () => {\n        localStorage.setItem(\"counterValue\", JSON.stringify(value))\n        localStorage.setItem(\"counterValue + 1\", JSON.stringify(value + 1))\n    }\n\n    const setSessionStorageHandler = () => {\n        // sessionStorage.setItem(\"Value\", JSON.stringify(value))\n        sessionStorage.setItem(\"Value\", value.toString())\n    }\n\n    const getFromLocalStorageHandler = () => {\n        let valueAsString = localStorage.getItem(\"counterValue\")\n        if (valueAsString) {\n            let newValue = JSON.parse(valueAsString)\n            setValue(newValue)\n        }\n    }\n\n    const clearLocalStorageHandler = () => {\n        localStorage.clear()\n        setValue(0)\n    }\n\n    const removeItemFromLocalStorageHandler = () => {\n        localStorage.removeItem(\"counterValue + 1\")\n    }\n\n    return (\n        <div>\n            <h1>{value}</h1>\n            <button onClick={incHandler}>inc</button>\n            <button onClick={setLocalStorageHandler}>setLocalStorage</button>\n            <button onClick={getFromLocalStorageHandler}>getFromLocalStorage</button>\n            <button onClick={clearLocalStorageHandler}>clearLocalStorage</button>\n            <button onClick={removeItemFromLocalStorageHandler}>removeItemFromLocalStorage</button>\n\n            <div>\n                <button onClick={setSessionStorageHandler}>setSessionStorage</button>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\n\nexport function UseEffect() {\n\n    let [value, setValue] = useState<number>(0)\n\n    const incHandler = () => {\n        setValue(value + 1)\n    }\n\n    useEffect(()=>{\n        let valueAsString = localStorage.getItem(\"useValue\")\n        if (valueAsString) {\n            let newValue = JSON.parse(valueAsString)\n            setValue(newValue)\n        }\n    },[])\n\n    useEffect(()=>{\n            localStorage.setItem(\"useValue\", JSON.stringify(value))\n    }, [value])\n\n    return (\n        <div>\n            <h1>{value}</h1>\n            <button onClick={incHandler}>inc</button>\n        </div>\n    );\n}\n","import React from 'react';\r\n\r\ntype  ButtonPropsType = {\r\n    score: number\r\n    addInc:() => void\r\n    addReset:() => void\r\n}\r\n\r\nexport function Button(props: ButtonPropsType) {\r\n    return <div className='buttons'>\r\n        <button className={'butC1'} onClick={props.addInc} disabled={props.score === 5}>+</button>\r\n        <button className={'butC1'} onClick={props.addReset} disabled={(props.score === 0)}>reset</button>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\n\r\ntype  ScorePropsType = {\r\n    score: number\r\n\r\n}\r\n\r\nexport function Score(props: ScorePropsType) {\r\n    return <div className={props.score === 5 ? 'scoreRed' : 'score'}>{props.score}</div>\r\n}\r\n","import React, {useState} from \"react\";\nimport {Button} from \"./Button\";\nimport {Score} from \"./Score\";\n\nexport function Counter_1() {\n\n    let [score, setScore] = useState<number>(0)\n\n    function inc() {\n        setScore(score + 1)\n    }\n\n    function reset() {\n        setScore(0)\n    }\n\n    return (\n        <div className=\"Counter_1\">\n            <div className='wrapper'>\n                <Score score={score}/>\n                <Button score={score}\n                        addInc={inc}\n                        addReset={reset}/>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\r\nimport s from './Counter2.module.css';\r\nimport {ErrorType} from \"./Counter_2\";\r\n\r\n\r\ntype  ButtonPropsType = {\r\n    score: number\r\n    inc: () => void\r\n    reset: () => void\r\n    start: number\r\n    max: number\r\n    error: ErrorType\r\n\r\n}\r\n\r\nexport function Button2(props: ButtonPropsType) {\r\n\r\n\r\n    const error1 = props.error === \"enter values and press 'set'\"\r\n    const error2 = props.error === \"Incorrect value!\"\r\n\r\n    return <div className={s.buttons}>\r\n        <button className={s.butC1}\r\n                onClick={props.inc}\r\n                disabled={error1 || error2 || props.score === props.max}>+\r\n        </button>\r\n        <button className={s.butC1}\r\n                onClick={props.reset}\r\n                disabled={error1 || error2 || props.score === props.start}>reset\r\n        </button>\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {ErrorType} from \"./Counter_2\";\r\nimport s from \"./Counter2.module.css\";\r\n\r\ntype  ScorePropsType = {\r\n    score: number\r\n    start: number\r\n    max: number\r\n    setError: (value: ErrorType) => void\r\n    error: ErrorType\r\n}\r\n\r\nexport function Score2(props: ScorePropsType) {\r\n\r\n\r\n    const errorStyle = props.error === \"Incorrect value!\" ? s.error : \"\"\r\n    const colorCount = props.score >= props.max ? s.error : \"\"\r\n\r\n    return <div className={s.score}>\r\n        {\r\n            props.error\r\n                ? <p className={errorStyle}>{props.error}</p>\r\n                : <h1 className={colorCount}>{props.score}</h1>\r\n        }\r\n    </div>\r\n}\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {ErrorType} from \"./Counter_2\";\r\nimport s from \"./Counter2.module.css\";\r\n\r\nexport type SetValuePropsType = {\r\n    setStart: (start: number) => void\r\n    max: number\r\n    setMax: (max: number) => void\r\n    score: number\r\n    start: number\r\n    setError: (value: ErrorType) => void\r\n    error: ErrorType\r\n}\r\n\r\nexport const SetValue = (props: SetValuePropsType) => {\r\n\r\n    if (props.start < 0) {\r\n        props.setError(\"Incorrect value!\")\r\n    } else if (props.start >= props.max) {\r\n        props.setError(\"Incorrect value!\")\r\n    }\r\n\r\n    const setMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setError(\"enter values and press 'set'\")\r\n        return props.setMax(Number(e.currentTarget.value))\r\n    }\r\n\r\n    const setMinValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setError(\"enter values and press 'set'\")\r\n        return props.setStart(Number(e.currentTarget.value))\r\n    }\r\n\r\n    const errorInput = `${s.input} ${props.error === \"Incorrect value!\" ? s.max : \"\"}`\r\n\r\n    return <div className={s.settingScore}>\r\n        <div>max value:<input\r\n            value={props.max}\r\n            className={errorInput}\r\n            onChange={setMaxValue}\r\n            type=\"number\"\r\n            // min=\"0\"\r\n        />\r\n        </div>\r\n        <div>start value:<input\r\n            value={props.start}\r\n            className={errorInput}\r\n            onChange={setMinValue}\r\n            type=\"number\"\r\n            // min=\"0\"\r\n        />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Counter2.module.css';\r\nimport {ErrorType} from \"./Counter_2\";\r\n\r\nexport type SetBPropsType = {\r\n    setStartMax: () => void\r\n    start: number\r\n    max: number\r\n    error: ErrorType\r\n}\r\n\r\nexport const SetB = (props: SetBPropsType) => {\r\n\r\n    const disabledButton = props.error === 'Incorrect value!'\r\n\r\n    return <div className={s.buttons}>\r\n        <button className={s.setBut} onClick={props.setStartMax} disabled={disabledButton}>set</button>\r\n    </div>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\nimport {Button2} from \"./Button\";\nimport {Score2} from \"./Score\";\nimport {SetValue} from \"./SetValue\";\nimport {SetB} from \"./SetB\";\nimport s from \"./Counter2.module.css\";\n\nexport type ErrorType = \"enter values and press 'set'\" | \"Incorrect value!\" | \"\"\n\nexport function Counter_2() {\n    let [score, setScore] = useState<number>(0)\n    const [start, setStart] = useState<number>(0)\n    const [max, setMax] = useState<number>(4)\n    const [error, setError] = useState<ErrorType>(\"\")\n\n    function inc() {\n        setScore(score + 1)\n    }\n\n    function reset() {\n        setScore(start)\n    }\n\n    const setStartMax = () => {\n        setScore(start)\n        setError(\"\")\n    }\n\n    useEffect(() => {\n        let valueAsString = localStorage.getItem(\"useScore\")\n        if (valueAsString) {\n            setScore(JSON.parse(valueAsString))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"useScore\", JSON.stringify(score))\n    }, [score])\n\n    useEffect(() => {\n        let valueAsString = localStorage.getItem(\"useStart\")\n        if (valueAsString) {\n            setStart(JSON.parse(valueAsString))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"useStart\", JSON.stringify(start))\n    }, [start])\n\n    useEffect(() => {\n        let valueAsString = localStorage.getItem(\"useMax\")\n        if (valueAsString) {\n            setMax(JSON.parse(valueAsString))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"useMax\", JSON.stringify(max))\n    }, [max])\n\n    return <div className={s.Counter_2}>\n        <div className={s.wrapper}>\n            <SetValue setStart={setStart}\n                      max={max}\n                      setMax={setMax}\n                      score={score}\n                      start={start}\n                      setError={setError}\n                      error={error}/>\n            <SetB setStartMax={setStartMax}\n                  start={start}\n                  max={max}\n                  error={error}/>\n        </div>\n\n        <div className={s.wrapper}>\n            <Score2 score={score}\n                    start={start}\n                    max={max}\n                    setError={setError}\n                    error={error}/>\n            <Button2 score={score}\n                     inc={inc}\n                     reset={reset}\n                     max={max}\n                     start={start}\n                     error={error}/>\n        </div>\n    </div>\n}\n\n","import s from './Button.module.css';\nimport React from 'react';\n\nexport type ButtonType = {\n    disabled: boolean\n    onClickHandler: () => void\n    title: string\n}\nexport const Button = (props: ButtonType) => {\n    return <button disabled={props.disabled}\n                   className={`${s.btn}`}\n                   onClick={props.onClickHandler}>{props.title}</button>\n}","import React from \"react\";\n//import {ErrorType, SettingsCounterType} from \"../App\";\nimport s from \"./Counter.module.css\";\nimport {Button} from \"./Button\";\nimport {ErrorType, SettingsCounterType} from \"./Counter_Vlad\";\n\nexport type CounterTableProps = {\n    count: number\n    settingsCounter: SettingsCounterType\n    error: ErrorType\n    slowResetCount: (count: number) => void\n}\nexport type CounterButtonsProps = {\n    count: number\n    error: ErrorType\n    setCountIncValue: () => void\n    resetCountValue: () => void\n    settingsCounter: SettingsCounterType\n    slowResetCount: (count: number) => void\n}\n\nexport type CounterPropsType = {\n    count: number\n    setCountIncValue: () => void\n    resetCountValue: () => void\n    slowResetCount: (count: number) => void\n    settingsCounter: SettingsCounterType\n    error: ErrorType\n}\n\nexport const Counter: React.FC<CounterPropsType> = ({settingsCounter, ...props}) => {\n    return (\n        <div className={s.CounterWrapper}>\n            <CounterTable\n                count={props.count}\n                settingsCounter={settingsCounter}\n                error={props.error}\n                slowResetCount={props.slowResetCount}\n            />\n            <CounterBtn\n                count={props.count}\n                setCountIncValue={props.setCountIncValue}\n                resetCountValue={props.resetCountValue}\n                settingsCounter={settingsCounter}\n                slowResetCount={props.slowResetCount}\n                error={props.error}\n            />\n        </div>\n    )\n}\n\nconst CounterTable: React.FC<CounterTableProps> = ({settingsCounter, ...props}) => {\n\n    const errorStyle = props.error === \"Incorrect value!\" ? s.error : \"\"\n    const colorCount = props.count >= settingsCounter.maxValueCount.valueCount ? s.error : \"\"\n\n    return (\n        <div className={s.counter}>\n            {props.error\n                ? <p className={errorStyle}>{props.error}</p>\n                : <h1 className={colorCount}>{props.count}</h1>}\n        </div>\n    )\n}\n\nconst CounterBtn: React.FC<CounterButtonsProps> = ({settingsCounter, ...props}) => {\n\n    const countInc = () => {\n        props.setCountIncValue()\n    }\n    const countReset = () => {\n        props.resetCountValue()\n    }\n    const slowlyReset = () => {\n        props.slowResetCount(props.count)\n    }\n\n    const error1 = props.error === \"enter values and press 'set'\"\n    const error2 = props.error === \"Incorrect value!\"\n\n    return (\n        <div className={s.buttons}>\n            <Button\n                title={\"inc\"}\n                disabled={error2 || error1 || props.count >= settingsCounter.maxValueCount.valueCount}\n                onClickHandler={countInc}\n            />\n            <Button\n                title={\"reset\"}\n                disabled={error2 || error1 || props.count <= settingsCounter.minValueCount.valueCount}\n                onClickHandler={countReset}\n            />\n            <Button\n                title={\"slowly reset\"}\n                disabled={error2 || error1 || props.count <= settingsCounter.minValueCount.valueCount}\n                onClickHandler={slowlyReset}\n            />\n        </div>\n    )\n}\n","import React, {ChangeEvent} from 'react';\nimport {ErrorType, SettingsCounterType} from \"./Counter_Vlad\";\nimport s from './CounterSettings.module.css';\nimport {Button} from './Button';\n\nexport type CounterTableProps = {\n    setNewSettings: (id: 'maxValueCount' | 'minValueCount', value: number) => void\n    settingsCounter: SettingsCounterType\n    setError: (value: ErrorType) => void\n    error: ErrorType\n}\nexport type ButtonType = {\n    disabled: boolean\n    onClickHandler: () => void\n    title: string\n}\nexport type CounterButtonsProps = {\n    setNewValue: () => void\n    error: ErrorType\n}\n\nexport type CounterSettingPropsType = {\n    setNewSettings: (id: 'maxValueCount' | 'minValueCount', value: number) => void\n    settingsCounter: SettingsCounterType\n    setNewValue: () => void\n    error: ErrorType\n    setError: (value: ErrorType) => void\n}\n\nexport const CounterSettings: React.FC<CounterSettingPropsType> = (props) => {\n\n    return (\n        <div className={s.CounterWrapper}>\n            <CounterTable\n                setNewSettings={props.setNewSettings}\n                settingsCounter={props.settingsCounter}\n                setError={props.setError}\n                error={props.error}\n            />\n            <CounterSettingBtn\n                setNewValue={props.setNewValue}\n                error={props.error}\n            />\n        </div>\n    )\n}\n\nconst CounterTable: React.FC<CounterTableProps> = (props) => {\n\n    if (props.settingsCounter.minValueCount) {\n        if (props.settingsCounter.minValueCount.valueCount < 0) {\n            props.setError(`Incorrect value!`)\n        } else if (props.settingsCounter.minValueCount.valueCount >= props.settingsCounter.maxValueCount.valueCount) {\n            props.setError(`Incorrect value!`)\n        }\n    }\n\n\n    const setNewMaxSettings = (e: ChangeEvent<HTMLInputElement>) => {\n        const num = e.currentTarget.valueAsNumber\n        props.setNewSettings('maxValueCount', num)\n    }\n    const setNewMinSettings = (e: ChangeEvent<HTMLInputElement>) => {\n        const num = e.currentTarget.valueAsNumber\n        props.setNewSettings('minValueCount', num)\n    }\n\n    const errorStyle = `${s.input} ${props.error === 'Incorrect value!' ? s.errorInput : ''}`\n\n    return (\n        <div className={s.counter}>\n            <div className={s.valueSettingWrapper}>\n                <label>{props.settingsCounter.maxValueCount.title}</label>\n                <input\n                    type=\"number\"\n                    className={ errorStyle }\n                    value={props.settingsCounter.maxValueCount.valueCount}\n                    onChange={setNewMaxSettings}\n                    //min=\"0\"\n                />\n            </div>\n            <div className={s.valueSettingWrapper}>\n                <label>{props.settingsCounter.minValueCount.title}</label>\n                <input\n                    type=\"number\"\n                    className={errorStyle}\n                    value={props.settingsCounter.minValueCount.valueCount}\n                    onChange={setNewMinSettings}\n                    //min=\"0\"\n                />\n            </div>\n        </div>\n    )\n}\n\nconst CounterSettingBtn: React.FC<CounterButtonsProps> = (props) => {\n\n    const disabledBtn = props.error === 'Incorrect value!'\n\n    const countSet = () => {\n        props.setNewValue()\n    }\n\n    return (\n        <div className={s.buttons}>\n            <Button disabled={disabledBtn} onClickHandler={countSet} title={'set'}/>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from \"react\";\n//import {Counter} from \"./components/Counter\";\n//import {CounterSettings} from \"./components/CounterSettings\";\nimport s from \"./App.module.css\";\nimport { Counter } from \"./Counter\";\nimport {CounterSettings} from \"./CounterSettings\";\n\n\nexport type SettingsType = {\n    title: string\n    valueCount: number\n}\nexport type SettingsCounterType = {\n    maxValueCount: SettingsType\n    minValueCount: SettingsType\n}\n\nexport type ErrorType = `enter values and press 'set'` | `Incorrect value!` | ``\n\nexport function Counter_Vlad() {\n\n    const [count, setCount] = useState<number>(0);\n    const [error, setError] = useState<ErrorType>(``)\n\n    const [settingsCounter, setSettingsCounter] = useState<SettingsCounterType>({\n        maxValueCount: {title: \"max value\", valueCount: 5},\n        minValueCount: {title: \"min value\", valueCount: 0}\n    })\n\n    const setNewSettings = (id: \"maxValueCount\" | \"minValueCount\", value: number) => {\n        setError(`enter values and press 'set'`)\n        return setSettingsCounter({\n            ...settingsCounter,\n            [id]: {...settingsCounter[id], valueCount: value}\n        })\n    }\n\n\n    const setNewValue = () => {\n        const newValue = settingsCounter.minValueCount\n        // if (newValue) {\n            setCount(newValue.valueCount)\n            setError(``)\n        // }\n    }\n\n    useEffect(() => {\n        let useScore = localStorage.getItem(\"useScore\")\n        if (useScore) {\n            setCount(JSON.parse(useScore))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"useScore\", JSON.stringify(count))\n    }, [count])\n\n    useEffect(() => {\n        const maxValueCount = localStorage.getItem(\"maxValueCount\")\n        const minValueCount = localStorage.getItem(\"minValueCount\")\n        if (maxValueCount && minValueCount) {\n            setSettingsCounter(\n                {\n                    ...settingsCounter,\n                    maxValueCount: JSON.parse(maxValueCount),\n                    minValueCount: JSON.parse(minValueCount)\n                }\n            )\n        }\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n    useEffect(() => {\n        localStorage.setItem(\"maxValueCount\", JSON.stringify(settingsCounter.maxValueCount))\n        localStorage.setItem(\"minValueCount\", JSON.stringify(settingsCounter.minValueCount))\n    }, [settingsCounter])\n\n\n    const setCountIncValue = () => {\n        setCount(count + 1)\n    }\n    const resetCountValue = () => {\n        setCount(settingsCounter.minValueCount.valueCount)\n    }\n\n    // set interval\n    // not using now\n    const slowResetCount = (count: number) => {\n        const interval = setInterval(() => {\n            if (count) {\n                setCount(--count)\n            }\n            if (count <= settingsCounter.minValueCount.valueCount) {\n                clearInterval(interval)\n            }\n        }, 100)\n    }\n\n\n    return (\n        <div className={s.App}>\n            <CounterSettings setNewSettings={setNewSettings}\n                             settingsCounter={settingsCounter}\n                             setNewValue={setNewValue}\n                             error={error}\n                             setError={setError}\n            />\n            <Counter count={count}\n                     error={error}\n                     setCountIncValue={setCountIncValue}\n                     resetCountValue={resetCountValue}\n                     slowResetCount={slowResetCount}\n                     settingsCounter={settingsCounter}\n            />\n        </div>\n    );\n}\n","import style from './Button.module.css';\n\ntype PropsType = {\n    callback: () => void\n    count?: number\n    maxValue?: number\n    startValue?: number\n    settings?: boolean\n    name: string\n    error?: string\n    disabled?: boolean\n}\n\nexport const Button = (props: PropsType) => {\n\n    const styleBtnValue = props.count === props.maxValue && props.count === props.startValue && props.settings ? style.disable : style.button\n\n    return (\n        <button\n            className={styleBtnValue}\n            onClick={props.callback}\n            disabled={props.disabled}\n        >\n            {props.name}\n        </button>\n    )\n}","import {ChangeEvent} from 'react';\n\ntype PropsType = {\n    name: string\n    type: string\n    className: any\n    value: number\n    callback: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const Input = (props: PropsType) => {\n\n    return (\n        <div>\n            <span>{props.name}</span>\n            <span><input\n                type={props.type}\n                className={props.className}\n                value={props.value}\n                onChange={props.callback}\n            /></span>\n        </div>\n    )\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport style from './Settings.module.css'\nimport {Button} from '../Buttons/Button';\nimport {Input} from \"./Input/Input\";\n\ntype PropsType = {\n    changeStartValue: (value: number) => void\n    changeMaxValue: (value: number) => void\n    startValue: number\n    maxValue: number\n    onSettings: (value: boolean) => void\n    error: string\n}\n\nexport const Settings = (props: PropsType) => {\n\n    const [localMaxValue, setLocalMaxValue] = useState<number>(props.maxValue)\n    const [localStartValue, setLocalStartValue] = useState<number>(props.startValue)\n\n    const startValueHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        props.changeStartValue(parseInt(event.currentTarget.value))\n        props.onSettings(true)\n    }\n\n    const maxValueHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        props.changeMaxValue(parseInt(event.currentTarget.value))\n        props.onSettings(true)\n    }\n\n    const addLocalStorageValues = (startValue: number, maxValue: number) => {\n        setLocalStartValue(startValue)\n        setLocalMaxValue(maxValue)\n    }\n\n    useEffect(() => {\n        setStorageValues()\n    }, [localStartValue])\n\n    const setStorageValues = () => {\n        localStorage.setItem('counterMaxValue', JSON.stringify(localMaxValue))\n        localStorage.setItem('counterStartValue', JSON.stringify(localStartValue))\n    }\n\n    const onClickSetBtnHandler = () => {\n        props.changeStartValue(props.startValue)\n        addLocalStorageValues(props.startValue, props.maxValue)\n        props.onSettings(false)\n    }\n\n    let inputClass = props.error ? style.error : style.set_input\n\n    return (\n        <div>\n            <div>\n                <Input\n                    name={'maxValue'}\n                    type={'number'}\n                    className={inputClass}\n                    value={props.maxValue}\n                    callback={maxValueHandler}\n                />\n                <Input\n                    name={'startValue'}\n                    type={'number'}\n                    className={inputClass}\n                    value={props.startValue}\n                    callback={startValueHandler}\n                />\n            </div>\n            <div>\n                <Button\n                    callback={onClickSetBtnHandler}\n                    name={'set'}\n                    disabled={props.error === 'Incorrect'}\n                />\n            </div>\n        </div>\n    )\n}","import style from './Display.module.css';\n\ntype PropsType = {\n    count: number\n    maxValue: number\n    settings: boolean\n}\n\nexport const Display = (props: PropsType) => {\n\n    const errorMessage = props.count === props.maxValue ? style.display && style.error_message : style.display\n    const value = props.settings ? 'enter value' : props.count\n    const classNameValue = props.settings ? style.display : errorMessage\n\n    return (\n        <div>\n            <input value={value} className={classNameValue}/>\n        </div>\n    )\n}","import React from 'react';\nimport {Display} from \"./Display/Display\";\n\ntype PropsType = {\n    count: number\n    maxValue: number\n    settings: boolean\n}\n\nexport const Counter = (props: PropsType) => {\n    return (\n        <div>\n            <Display\n                count={props.count}\n                maxValue={props.maxValue}\n                settings={props.settings}\n            />\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Settings} from \"./components/Settings/Settings\";\nimport {Counter} from \"./components/Counter/Counter\";\nimport {Button} from \"./components/Buttons/Button\";\n\nexport function App_someone() {\n\n    const [count, setCount] = useState<number>(0)\n    const [maxValue, setMaxValue] = useState<number>(1)\n    const [startValue, setStartValue] = useState<number>(0)\n    const [settings, setSettings] = useState<boolean>(false)\n    const [error, setError] = useState<string>('')\n\n    const changeCount = () => {\n        if (count < maxValue) {\n            setCount(count + 1)\n        } else {\n            setError('Max')\n        }\n    }\n\n    const resetCount = () => {\n        setCount(startValue)\n        setError('')\n    }\n\n    const changeMaxValue = (value: number) => {\n        if (value <= startValue || value < 0) {\n            setError('Incorrect');\n        } else {\n            setError('');\n        }\n        setMaxValue(value);\n    }\n\n    const changeStartValue = (value: number) => {\n        if (value >= maxValue || value < 0) {\n            setError('Incorrect')\n        } else {\n            setError('');\n        }\n        setStartValue(value);\n        setCount(startValue);\n    }\n    const onSettings = (value: boolean) => {\n        setSettings(value);\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"container1\">\n                <Settings\n                    changeStartValue={changeStartValue}\n                    changeMaxValue={changeMaxValue}\n                    startValue={startValue}\n                    maxValue={maxValue}\n                    onSettings={onSettings}\n                    error={error}\n                />\n            </div>\n            <div className=\"container2\">\n                <Counter\n                    count={count}\n                    maxValue={maxValue}\n                    settings={settings}\n                />\n                <Button\n                    name={'increment'}\n                    count={count}\n                    callback={changeCount}\n                    maxValue={maxValue}\n                    settings={settings}\n                    disabled={error === 'Max'}\n                />\n                <Button\n                    name={'reset'}\n                    count={count}\n                    callback={resetCount}\n                    startValue={startValue}\n                    settings={settings}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default App_someone;\n","import React from \"react\";\r\nimport s from \"./Counter2_1.module.css\";\r\nimport {ErrorType} from \"./Counter_2_1\";\r\n\r\ntype  ButtonPropsType = {\r\n    score: number\r\n    inc: () => void\r\n    reset: () => void\r\n    start: number\r\n    max: number\r\n    error: ErrorType\r\n    onOff: () => void\r\n}\r\n\r\nexport function Button2(props: ButtonPropsType) {\r\n\r\n\r\n    const error1 = props.error === \"enter values and press 'set'\"\r\n    const error2 = props.error === \"Incorrect value!\"\r\n\r\n    return <div className={s.buttons}>\r\n        <button className={s.butC1}\r\n                onClick={props.inc}\r\n                disabled={error1 || error2 || props.score === props.max}>+\r\n        </button>\r\n        <button className={s.butC1}\r\n                onClick={props.reset}\r\n                disabled={error1 || error2 || props.score === props.start}>reset\r\n        </button>\r\n\r\n        <button className={s.butC1} onClick={props.onOff}>set</button>\r\n    </div>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {ErrorType} from \"./Counter_2_1\";\r\nimport s from \"./Counter2_1.module.css\";\r\n\r\ntype  ScorePropsType = {\r\n    score: number\r\n    start: number\r\n    max: number\r\n    setError: (value: ErrorType) => void\r\n    error: ErrorType\r\n}\r\n\r\nexport function Score2(props: ScorePropsType) {\r\n\r\n\r\n    const errorStyle = props.error === \"Incorrect value!\" ? s.error : \"\"\r\n    const colorCount = props.score >= props.max ? s.error : \"\"\r\n\r\n    return <div className={s.score}>\r\n        {\r\n            props.error\r\n                ? <p className={errorStyle}>{props.error}</p>\r\n                : <h1 className={colorCount}>{props.score}</h1>\r\n        }\r\n    </div>\r\n}\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {ErrorType} from \"./Counter_2_1\";\r\nimport s from \"./Counter2_1.module.css\";\r\n\r\nexport type SetValuePropsType = {\r\n    setStart: (start: number) => void\r\n    max: number\r\n    setMax: (max: number) => void\r\n    score: number\r\n    start: number\r\n    setError: (value: ErrorType) => void\r\n    error: ErrorType\r\n}\r\n\r\nexport const SetValue = (props: SetValuePropsType) => {\r\n\r\n    if (props.start < 0) {\r\n        props.setError(\"Incorrect value!\")\r\n    } else if (props.start >= props.max) {\r\n        props.setError(\"Incorrect value!\")\r\n    }\r\n\r\n    const setMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setError(\"enter values and press 'set'\")\r\n        return props.setMax(Number(e.currentTarget.value))\r\n    }\r\n\r\n    const setMinValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setError(\"enter values and press 'set'\")\r\n        return props.setStart(Number(e.currentTarget.value))\r\n    }\r\n\r\n    const errorInput = `${s.input} ${props.error === \"Incorrect value!\" ? s.max : \"\"}`\r\n\r\n    return <div className={s.settingScore}>\r\n        <div className={s.mxValue}>\r\n            <div>\r\n                <span>max value:</span>\r\n                <input\r\n                    value={props.max}\r\n                    className={errorInput}\r\n                    onChange={setMaxValue}\r\n                    type=\"number\"\r\n                    // min=\"0\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <span>start value:</span>\r\n                <input\r\n                    value={props.start}\r\n                    className={errorInput}\r\n                    onChange={setMinValue}\r\n                    type=\"number\"\r\n                    // min=\"0\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Counter2_1.module.css';\r\nimport {ErrorType} from \"./Counter_2_1\";\r\n\r\nexport type SetBPropsType = {\r\n    setStartMax: () => void\r\n    start: number\r\n    max: number\r\n    error: ErrorType\r\n}\r\n\r\nexport const SetB = (props: SetBPropsType) => {\r\n\r\n    const disabledButton = props.error === 'Incorrect value!'\r\n\r\n    return <div className={s.buttons}>\r\n        <button className={s.setBut} onClick={props.setStartMax} disabled={disabledButton}>set</button>\r\n    </div>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\nimport {Button2} from \"./Button\";\nimport {Score2} from \"./Score\";\nimport {SetValue} from \"./SetValue\";\nimport {SetB} from \"./SetB\";\nimport s from \"./Counter2_1.module.css\";\n\nexport type ErrorType = \"enter values and press 'set'\" | \"Incorrect value!\" | \"\"\n\nexport function Counter_2_1() {\n    let [score, setScore] = useState<number>(0)\n    const [start, setStart] = useState<number>(0)\n    const [max, setMax] = useState<number>(4)\n    const [error, setError] = useState<ErrorType>(\"\")\n    const [isOnOff, setIsOnOff] = useState<boolean>(false)\n\n    const onOff = () => {\n        setIsOnOff(true)\n    }\n\n    const inc = () => {\n        setScore(score + 1)\n    }\n\n    const reset = () => {\n        setScore(start)\n    }\n\n    const setStartMax = () => {\n        setScore(start)\n        setError(\"\")\n        setIsOnOff(false)\n    }\n\n    useEffect(() => {\n        let isOnOff = localStorage.getItem(\"isOnOff\")\n        if (isOnOff) {\n            setIsOnOff(JSON.parse(isOnOff))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"isOnOff\", JSON.stringify(isOnOff))\n    }, [isOnOff])\n\n    useEffect(() => {\n        let settingScore = localStorage.getItem(\"settingScore\")\n        if (settingScore) {\n            setScore(JSON.parse(settingScore))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"settingScore\", JSON.stringify(score))\n    }, [score])\n\n\n    useEffect(() => {\n        let settingStart = localStorage.getItem(\"settingStart\")\n        if (settingStart) {\n            setStart(JSON.parse(settingStart))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"settingStart\", JSON.stringify(start))\n    }, [start])\n\n\n    useEffect(() => {\n        let settingMax = localStorage.getItem(\"settingMax\")\n        if (settingMax) {\n            setMax(JSON.parse(settingMax))\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem(\"settingMax\", JSON.stringify(max))\n    }, [max])\n\n    return <div className={s.Counter_2}>\n        {isOnOff\n            ? (<div className={s.wrapper}>\n                <SetValue\n                    setStart={setStart}\n                    max={max}\n                    setMax={setMax}\n                    score={score}\n                    start={start}\n                    setError={setError}\n                    error={error}/>\n                <SetB\n                    setStartMax={setStartMax}\n                    start={start}\n                    max={max}\n                    error={error}/>\n            </div>)\n            : (<div className={s.wrapper}>\n                <Score2\n                    score={score}\n                    start={start}\n                    max={max}\n                    setError={setError}\n                    error={error}/>\n                <Button2\n                    score={score}\n                    inc={inc}\n                    reset={reset}\n                    max={max}\n                    start={start}\n                    error={error}\n                    onOff={onOff}/>\n            </div>)\n        }\n    </div>\n}\n","import React from \"react\";\nimport {Counter_localstorage} from \"../Counter_localstorage/Counter_localstorage\";\nimport {UseEffect} from \"../Counter_localstorage_useEffect/useEffect\";\nimport {Counter_1} from \"../Counter_1/Counter_1\";\nimport \"./App.css\"\nimport {Counter_2} from \"../Counter_2.0_localstorage/Counter_2\";\nimport {Counter_Vlad} from \"../Count Else/Counter_Vlad/Counter_Vlad\";\nimport App_someone from \"../Count Else/Counter_someone/App\";\nimport {Counter_2_1} from \"../Counter_2.1_localstorage/Counter_2_1\";\n\nfunction App() {\n\n    return (\n        <div className='app'>\n            <div>Counter 1:</div>\n            <Counter_1/>\n            <hr/>\n            <hr/>\n            <div>COUNTER 2.0 localstorage:</div>\n            <Counter_2/>\n            <hr/>\n            <hr/>\n            <div>COUNTER 2.1 localstorage:</div>\n            <Counter_2_1/>\n            <hr/>\n            <hr/>\n            <div>Counter Vlad:</div>\n            <Counter_Vlad/>\n            <hr/>\n            <hr/>\n            <div>Counter Someone:</div>\n            <App_someone/>\n            <hr/>\n            <hr/>\n            <div>Counter localstorage:</div>\n            <Counter_localstorage/>\n            <hr/>\n            <hr/>\n            <div>Counter localstorage useEffect:</div>\n            <UseEffect/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}